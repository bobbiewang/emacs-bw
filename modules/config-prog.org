#+TITLE:     编程

* Compile

#+BEGIN_SRC emacs-lisp
  (use-package compile
    :ensure nil
    :bind (([f6] . compile)))
#+END_SRC

* Flycheck

  [[http://www.flycheck.org/][Flycheck]] 是个现代的实时语法检查工具，可以替代 Flymake。

  Flycheck 对于不同的语言使用不同的 Chcker。M-x flycheck-verify-setup
检查当前的 Checker 是否正确设置了。

  如果在 Windows 平台使用 Cygwin，Flycheck 的 c/c++-lang Checker 使用
clang.exe。可是 Cygwin 缺省是安装 /bin/clang-N.0.exe，然后创建
/bin/clang 链接。这样的话，Flycheck 就找不到 Clang 的可执行程序了。解
决的方法是将 /bin/clang-N.0.exe 复制为 /bin/clang.exe。

#+BEGIN_SRC emacs-lisp
  (use-package flycheck
    :ensure t
    :init
    ;; 禁用 emacs-lisp-checkdoc，以免在编辑 Org 中的 Emacs Lisp 代码时显
    ;; 示多余的错误信息
    (setq-default flycheck-disabled-checkers '(emacs-lisp-checkdoc))
    (global-flycheck-mode))
#+END_SRC

* AutoHotkey

  [[https://github.com/ralesi/ahk-mode][ahk-mode]] 支持 AutoHotkey 脚本（.ahk）的开发。
  - 语法高亮
  - 通过 Company 或者 Auto-complete 补全
  - 缩进
  - 注释
  - 查找文档

#+BEGIN_SRC emacs-lisp
  (use-package ahk-mode
    :ensure t)
#+END_SRC

* C#

#+BEGIN_SRC emacs-lisp
  (use-package csharp-mode
    :ensure t)
#+END_SRC

* Verilog

#+BEGIN_SRC emacs-lisp
  (use-package verilog-mode
    :ensure nil
    :bind (:map verilog-mode-map
                ;; 取消原来绑定命令 electric-verilog-semi-with-comment
                ;; 恢复到到全局的绑定
                ("C-;" . set-mark-command)))
#+END_SRC
